Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DECK_STORAGE_KEY = undefined;
exports.getDecks = getDecks;
exports.getDeck = getDeck;
exports.saveDeckTitle = saveDeckTitle;
exports.saveCardToDeck = saveCardToDeck;

var _reactNative = require('react-native');

var DECK_STORAGE_KEY = exports.DECK_STORAGE_KEY = 'MobileFlashCards::Decks';

function getDecks() {
    return _reactNative.AsyncStorage.getItem(DECK_STORAGE_KEY).then(function (decks) {
        return JSON.parse(decks);
    });
}

function getDeck(id) {
    return getDecks().then(function (decks) {
        if (decks === null) return null;
        return decks[id];
    });
}

function saveDeckTitle(id, title) {
    return _reactNative.AsyncStorage.mergeItem(DECK_STORAGE_KEY, JSON.stringify(babelHelpers.defineProperty({}, id, {
        id: id,
        title: title,
        questions: []
    })));
}

function saveCardToDeck(id, card) {
    return getDeck(id).then(function (deck) {
        if (deck === null) return null;
        return _reactNative.AsyncStorage.mergeItem(DECK_STORAGE_KEY, JSON.stringify(babelHelpers.defineProperty({}, id, babelHelpers.extends({}, deck, {
            questions: [].concat(babelHelpers.toConsumableArray(deck.questions), [card])
        }))));
    }).then(function () {
        return card;
    });
}