["234c54a650c6063befaf0ce053aa08d4f84ae265","e6fe15348845370ee98455136941febe3483962c",["react-native"],[269],{"version":3,"sources":["/Users/alfianlosari/Desktop/RN/MobileFlashcards/utils/api.js"],"names":["getDecks","getDeck","saveDeckTitle","saveCardToDeck","DECK_STORAGE_KEY","getItem","then","decks","JSON","parse","id","title","mergeItem","stringify","questions","card","deck"],"mappings":";;;;QAIgBA,Q,GAAAA,Q;QAKAC,O,GAAAA,O;QAQAC,a,GAAAA,a;QAUAC,c,GAAAA,c;;AA3BhB;;AAEO,IAAMC,8CAAmB,yBAAzB;;AAEA,SAASJ,QAAT,GAAoB;AACvB,WAAO,0BAAaK,OAAb,CAAqBD,gBAArB,EACFE,IADE,CACG,UAACC,KAAD;AAAA,eAAYC,KAAKC,KAAL,CAAWF,KAAX,CAAZ;AAAA,KADH,CAAP;AAEH;;AAEM,SAASN,OAAT,CAAiBS,EAAjB,EAAqB;AACxB,WAAOV,WACFM,IADE,CACG,UAACC,KAAD,EAAW;AACb,YAAIA,UAAU,IAAd,EAAoB,OAAO,IAAP;AACpB,eAAOA,MAAMG,EAAN,CAAP;AACH,KAJE,CAAP;AAKH;;AAEM,SAASR,aAAT,CAAuBQ,EAAvB,EAA2BC,KAA3B,EAAkC;AACrC,WAAO,0BAAaC,SAAb,CAAuBR,gBAAvB,EAAyCI,KAAKK,SAAL,iCAC5CH,EAD4C,EACvC;AACFA,cADE;AAEFC,oBAFE;AAGFG,mBAAW;AAHT,KADuC,EAAzC,CAAP;AAOH;;AAEM,SAASX,cAAT,CAAwBO,EAAxB,EAA4BK,IAA5B,EAAkC;AACrC,WAAOd,QAAQS,EAAR,EACFJ,IADE,CACG,UAACU,IAAD,EAAU;AACZ,YAAIA,SAAS,IAAb,EAAmB,OAAO,IAAP;AACnB,eAAO,0BAAaJ,SAAb,CAAuBR,gBAAvB,EAAyCI,KAAKK,SAAL,iCAC3CH,EAD2C,2BAErCM,IAFqC;AAGxCF,gEAAeE,KAAKF,SAApB,IAA+BC,IAA/B;AAHwC,YAAzC,CAAP;AAMH,KATE,EAUFT,IAVE,CAUG;AAAA,eAAMS,IAAN;AAAA,KAVH,CAAP;AAWH","sourcesContent":["import { AsyncStorage } from 'react-native'; \n\nexport const DECK_STORAGE_KEY = 'MobileFlashCards::Decks'\n\nexport function getDecks() {\n    return AsyncStorage.getItem(DECK_STORAGE_KEY)\n        .then((decks) => (JSON.parse(decks)));\n}\n\nexport function getDeck(id) {\n    return getDecks()\n        .then((decks) => {\n            if (decks === null) return null;\n            return decks[id]\n        });\n}\n\nexport function saveDeckTitle(id, title) {\n    return AsyncStorage.mergeItem(DECK_STORAGE_KEY, JSON.stringify({\n       [id]: {\n           id,\n           title,\n           questions: []\n       } \n    }))\n}\n\nexport function saveCardToDeck(id, card) {\n    return getDeck(id)\n        .then((deck) => {\n            if (deck === null) return null;\n            return AsyncStorage.mergeItem(DECK_STORAGE_KEY, JSON.stringify({\n                [id]: {\n                    ...deck,\n                    questions: [...deck.questions, card]\n                }\n            }))\n        })\n        .then(() => card)\n}\n"]}]