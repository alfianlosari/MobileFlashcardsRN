["46a88d29a4c9c63f60b5626eb88cf374364f9a2d","602f9e70840508443278d26ba508a2a0dac01c54",["react","react-native","../utils/api","../actions","react-redux","./TextButton","../utils/colors","react-navigation","uuid/v4"],[110,207,244,285,327,370,479,531,574],{"version":3,"sources":["/Users/alfianlosari/Desktop/RN/MobileFlashcards/components/AddDeck.js"],"names":["uuidv4","require","AddDeck","state","title","toDetail","deckId","props","navigation","navigate","submitDeck","dispatch","length","setState","id","questions","styles","container","question","CREATE_DECK_TEXT","textField","margin","navigationOptions","create","flex","backgroundColor","alignItems","justifyContent","marginLeft","marginRight","marginTop","marginBottom","fontSize","textAlign","height","width","borderColor","borderWidth","borderRadius","paddingLeft","paddingRight"],"mappings":";;;;;;AAAC;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AAEA;;AACA,IAAMA,SAASC,OAAT,WAAN;;IAEMC,O;;;;;;;;;;;;;;wMAUHC,K,GAAQ;AACJC,mBAAO;AADH,S,QAIRC,Q,GAAW,UAACC,MAAD,EAASF,KAAT,EAAmB;AAC1B,kBAAKG,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C,EAAEH,cAAF,EAAUF,YAAV,EAA7C;AACN,S,QAEEM,U,GAAa,YAAM;AAAA,gBACPN,KADO,GACG,MAAKD,KADR,CACPC,KADO;AAAA,gBAEPO,QAFO,GAEM,MAAKJ,KAFX,CAEPI,QAFO;;AAGf,gBAAIP,MAAMQ,MAAN,GAAe,CAAnB,EAAsB;AAClB,sBAAKC,QAAL,CAAc;AAAA,2BAAO;AACjBT,+BAAO;AADU,qBAAP;AAAA,iBAAd;AAGA,oBAAMU,KAAKd,QAAX;AACAW,yBAAS,sDACJG,EADI,EACC;AACFA,0BADE;AAEFV,gCAFE;AAGFW,+BAAW;AAHT,iBADD,EAAT;;AAQA,wCAAcD,EAAd,EAAkBV,KAAlB;AACA,sBAAKC,QAAL,CAAcS,EAAd,EAAkBV,KAAlB;AACH;AACJ,S;;;;;iCAEQ;AAAA;;AACL,mBACI;AAAA;AAAA,kBAAsB,OAAOY,OAAOC,SAApC;AACI;AAAA;AAAA,sBAAM,OAAOD,OAAOE,QAApB;AAA+BhB,4BAAQiB;AAAvC,iBADJ;AAEI;AACI,2BAAOH,OAAOI,SADlB;AAEI,kCAAc,sBAAChB,KAAD;AAAA,+BAAW,OAAKS,QAAL,CAAc,EAACT,YAAD,EAAd,CAAX;AAAA,qBAFlB;AAGI,2BAAO,KAAKD,KAAL,CAAWC,KAHtB;AAII,iCAAY;AAJhB,kBAFJ;AASI;AAAA;AAAA,sBAAY,OAAO,EAACiB,QAAQ,EAAT,EAAnB,EAAiC,0BAAjC,EAAqD,SAAS,KAAKX,UAAnE;AAAA;AAAA;AATJ,aADJ;AAeH;;;4BArDMS,gB,GAAmB,qC,SAEnBG,iB,GAAoB,iBAAoB;AAAA,QAAjBd,UAAiB,SAAjBA,UAAiB;;AAC3C,WAAO;AACHJ,eAAO;AADJ,KAAP;AAGH,C;;;AAkDL,IAAMY,SAAS,wBAAWO,MAAX,CAAkB;AAC7BN,eAAW;AACTO,cAAM,CADG;AAETC,yBAAiB,MAFR;AAGTC,oBAAY,QAHH;AAITC,wBAAgB;AAJP,KADkB;AAO7BT,cAAU;AACNU,oBAAY,EADN;AAENC,qBAAa,EAFP;AAGNC,mBAAW,EAHL;AAINC,sBAAc,EAJR;AAKNC,kBAAU,EALJ;AAMNC,mBAAW;AANL,KAPmB;AAe7Bb,eAAW;AACPc,gBAAQ,EADD,EACKC,OAAO,KADZ,EACmBC,aAAa,MADhC,EACwCC,aAAa,CADrD;AAEPC,sBAAc,CAFP;AAGPC,qBAAa,CAHN;AAIPC,sBAAc,CAJP;AAKPT,sBAAc,EALP;AAMPK;AANO;;AAfkB,CAAlB,CAAf;;kBA0BiB,2BAAUlC,OAAV,C","sourcesContent":[" import React, { Component } from 'react';\n import { KeyboardAvoidingView, Text, TextInput, TouchableOpacity, StyleSheet, Keyboard } from 'react-native';\n import { saveDeckTitle } from '../utils/api';\n import { addDeck } from '../actions';\n import { connect } from 'react-redux';\n import TextButton from './TextButton'; \n import { black } from '../utils/colors';\n \n import { NavigationActions } from 'react-navigation'; \n const uuidv4 = require('uuid/v4');\n \n class AddDeck extends Component {\n\n    static CREATE_DECK_TEXT = 'What is the title of your new deck?'\n\n    static navigationOptions = ({ navigation }) => {\n        return {\n            title: 'Add Deck'\n        }\n    }\n    \n    state = {\n        title: ''\n    }\n    \n    toDetail = (deckId, title) => {\n        this.props.navigation.navigate('DeckDetail', { deckId, title })\n\t}\n\n    submitDeck = () => {\n        const { title } = this.state;\n        const { dispatch } = this.props; \n        if (title.length > 0) {\n            this.setState(() => ({\n                title: ''\n            }))\n            const id = uuidv4();\n            dispatch(addDeck({\n                [id]: {\n                    id,\n                    title,\n                    questions: []\n                }\n            }));\n\n            saveDeckTitle(id, title);\n            this.toDetail(id, title);            \n        }\n    }\n\n    render() {\n        return (\n            <KeyboardAvoidingView style={styles.container}>\n                <Text style={styles.question}>{AddDeck.CREATE_DECK_TEXT}</Text>\n                <TextInput\n                    style={styles.textField}\n                    onChangeText={(title) => this.setState({title})}      \n                    value={this.state.title}\n                    placeholder='Deck Title'\n                />\n\n                <TextButton style={{margin: 20}} buttonColor={black} onPress={this.submitDeck}>\n                    Submit\n                </TextButton>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n    },\n    question: {\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 40,\n        marginBottom: 20,\n        fontSize: 28,\n        textAlign: 'center'\n    },\n    textField: {\n        height: 40, width: '80%', borderColor: 'gray', borderWidth: 1,\n        borderRadius: 5,\n        paddingLeft: 8,\n        paddingRight: 8,\n        marginBottom: 20,\n        borderColor: black\n    }\n\n  });\n\n  export default connect()(AddDeck)\n"]}]