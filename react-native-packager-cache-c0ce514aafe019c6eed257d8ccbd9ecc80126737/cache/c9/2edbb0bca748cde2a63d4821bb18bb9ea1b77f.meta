["5bf6c3dddf19f30ffc00a361530f8ce3ad344db2","995eac0b79ffba5b6a2042c07a1761ea0c020c5a",["react","react-native","../utils/api","../actions","react-redux"],[110,207,244,285,327],{"version":3,"sources":["/Users/alfianlosari/Desktop/RN/MobileFlashcards/components/ListDeck.js"],"names":["ListDeck","renderSeparator","height","width","backgroundColor","_keyExtractor","item","index","id","_renderItem","styles","deckItem","props","navigation","navigate","deckId","title","textContainer","fontSize","color","questions","length","dispatch","then","decks","navigationOptions","create","container","flex","alignItems","justifyContent","padding","mapStateToProps","deck","Object","keys","map","key"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;IAEMA,Q;;;;;;;;;;;;;;0MAQFC,e,GAAkB,YAAM;AACpB,mBACE;AACE,uBAAO;AACLC,4BAAQ,CADH;AAELC,2BAAO,MAFF;AAGLC,qCAAiB;AAHZ;AADT,cADF;AASD,S,QAEHC,a,GAAgB,UAACC,IAAD,EAAOC,KAAP;AAAA,mBAAiBD,KAAKE,EAAtB;AAAA,S,QAChBC,W,GAAc;AAAA,gBAAEH,IAAF,SAAEA,IAAF;AAAA,mBACL;AAAA;AAAA,kBAAkB,OAAOI,OAAOC,QAAhC,EAA0C,SAAS;AAAA,+BAAM,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C,EAAEC,QAAQT,KAAKE,EAAf,EAAmBQ,OAAOV,KAAKU,KAA/B,EAA7C,CAAN;AAAA,qBAAnD;AACG;AAAA;AAAA,sBAAM,OAAON,OAAOO,aAApB;AACI;AAAA;AAAA,0BAAM,OAAO,EAACC,UAAU,EAAX,EAAb;AAA8BZ,6BAAKU;AAAnC,qBADJ;AAEI;AAAA;AAAA,0BAAM,OAAO,EAACE,UAAU,EAAX,EAAeC,OAAO,SAAtB,EAAb;AAAgDb,6BAAKc,SAAL,CAAeC,MAA/D;AAAA;AAAA;AAFJ;AADH,aADK;AAAA,S;;;;;4CAUM;AAAA,gBACRC,QADQ,GACK,KAAKV,KADV,CACRU,QADQ;;AAEhB,iCACKC,IADL,CACU,UAACC,KAAD;AAAA,uBAAWF,SAAS,2BAAaE,KAAb,CAAT,CAAX;AAAA,aADV;AAEH;;;iCAEQ;AAAA,yBACyB,KAAKZ,KAD9B;AAAA,gBACGY,KADH,UACGA,KADH;AAAA,gBACUX,UADV,UACUA,UADV;;AAEL,mBACI;AACA,sBAAMW,KADN;AAEA,4BAAY,KAAKf,WAFjB;AAGA,8BAAc,KAAKJ,aAHnB;AAIA,wCAAwB,KAAKJ;AAJ7B,cADJ;AAQH;;;4BA7CMwB,iB,GAAoB,iBAAoB;AAAA,QAAjBZ,UAAiB,SAAjBA,UAAiB;;AAC3C,WAAO;AACHG,eAAO;AADJ,KAAP;AAGH,C;;;AA4CL,IAAMN,SAAS,wBAAWgB,MAAX,CAAkB;AAC7BC,eAAW;AACPC,cAAM,CADC;AAEPxB,yBAAiB,MAFV;AAGPyB,oBAAY,QAHL;AAIPC,wBAAgB;AAJT,KADkB;AAO7BnB,cAAU;AACNoB,iBAAS,EADH;AAEN3B,yBAAiB;AAFX,KAPmB;AAW7Ba,mBAAe;AACXY,oBAAY,QADD;AAEXC,wBAAgB;AAFL;AAXc,CAAlB,CAAf;;AAiBA,SAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,QAAIT,QAAQU,OAAOC,IAAP,CAAYF,IAAZ,EAAkBG,GAAlB,CAAsB,UAACC,GAAD;AAAA,eAASJ,KAAKI,GAAL,CAAT;AAAA,KAAtB,CAAZ;AACA,WAAO;AACHb;AADG,KAAP;AAGH;;kBAEc,yBAAQQ,eAAR,EAAyBhC,QAAzB,C","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollView, StyleSheet, Text, View, TouchableOpacity, FlatList } from 'react-native';\nimport { getDecks } from '../utils/api';\nimport { receiveDecks } from '../actions';\nimport { connect } from 'react-redux';\n\nclass ListDeck extends Component {\n\n    static navigationOptions = ({ navigation }) => {\n        return {\n            title: 'My Decks'\n        }\n    }\n\n    renderSeparator = () => {\n        return (\n          <View\n            style={{\n              height: 1,\n              width: \"100%\",\n              backgroundColor: \"#CED0CE\",\n            }}\n          />\n        );\n      };\n\n    _keyExtractor = (item, index) => item.id;\n    _renderItem = ({item}) => (\n             <TouchableOpacity style={styles.deckItem} onPress={() => this.props.navigation.navigate('DeckDetail', { deckId: item.id, title: item.title })}>\n                <View style={styles.textContainer}>\n                    <Text style={{fontSize: 20}}>{item.title}</Text> \n                    <Text style={{fontSize: 14, color: '#c0c0c0'}}>{item.questions.length} Cards</Text>\n                </View>\n            </TouchableOpacity>\n       \n    );\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        getDecks()\n            .then((decks) => dispatch(receiveDecks(decks)))\n    }\n\n    render() {\n        const { decks, navigation } = this.props;\n        return (\n            <FlatList\n            data={decks}\n            renderItem={this._renderItem}\n            keyExtractor={this._keyExtractor}\n            ItemSeparatorComponent={this.renderSeparator}\n            />\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    deckItem: {\n        padding: 40,\n        backgroundColor: '#fff',\n    },\n    textContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n});\n\nfunction mapStateToProps(deck) {\n    let decks = Object.keys(deck).map((key) => deck[key])\n    return {\n        decks\n    }\n}\n\nexport default connect(mapStateToProps)(ListDeck)\n"]}]