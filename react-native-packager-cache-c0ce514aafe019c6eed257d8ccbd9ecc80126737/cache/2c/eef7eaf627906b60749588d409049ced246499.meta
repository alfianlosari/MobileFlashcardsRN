["ed32b20ee3b823c42e761b2358b5b87065f4ddd2","f775d99f6f4d87b5178ad6f9ac07b9f9c8777560",["react","react-native","react-redux","../utils/api","../actions","react-navigation","./TextButton","../utils/colors","uuid/v4"],[110,207,251,287,328,375,423,532,574],{"version":3,"sources":["/Users/alfianlosari/Desktop/RN/MobileFlashcards/components/AddCard.js"],"names":["uuidv4","require","AddCard","state","question","answer","submitCard","props","dispatch","navigation","deckId","params","length","id","card","toDeck","goBack","styles","container","textField","marginTop","setState","margin","navigationOptions","title","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderColor","borderWidth","borderRadius","paddingLeft","paddingRight","marginBottom"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA,IAAMA,SAASC,OAAT,WAAN;;IAEMC,O;;;;;;;;;;;;;;wMAQFC,K,GAAQ;AACJC,sBAAU,EADN;AAEJC,oBAAQ;AAFJ,S,QAKRC,U,GAAa,YAAM;AAAA,8BACc,MAAKH,KADnB;AAAA,gBACPC,QADO,eACPA,QADO;AAAA,gBACGC,MADH,eACGA,MADH;AAAA,8BAEkB,MAAKE,KAFvB;AAAA,gBAEPC,QAFO,eAEPA,QAFO;AAAA,gBAEGC,UAFH,eAEGA,UAFH;AAAA,gBAGPC,MAHO,GAGID,WAAWN,KAAX,CAAiBQ,MAHrB,CAGPD,MAHO;;AAIf,gBAAIN,SAASQ,MAAT,GAAkB,CAAlB,IAAuBP,OAAOO,MAAP,GAAgB,CAA3C,EAA8C;AAC1C,oBAAMC,KAAKb,QAAX;AACA,oBAAMc,OAAO,EAAED,MAAF,EAAMT,kBAAN,EAAgBC,cAAhB,EAAb;AACAG,yBAAS,4BAAcE,MAAd,EAAsBI,IAAtB,CAAT;AACA,yCAAeJ,MAAf,EAAuBI,IAAvB;AACA,sBAAKC,MAAL;AACH;AACJ,S,QAEDA,M,GAAS,YAAM;AACX,kBAAKR,KAAL,CAAWE,UAAX,CAAsBO,MAAtB;AACN,S;;;;;iCAEW;AAAA;;AACL,mBACI;AAAA;AAAA,kBAAsB,OAAOC,OAAOC,SAApC;AACI;AACI,2BAAO,CAACD,OAAOE,SAAR,EAAmB,EAAEC,WAAW,EAAb,EAAnB,CADX;AAEI,kCAAc,sBAAChB,QAAD;AAAA,+BAAc,OAAKiB,QAAL,CAAc,EAACjB,kBAAD,EAAd,CAAd;AAAA,qBAFlB;AAGI,2BAAO,KAAKD,KAAL,CAAWC,QAHtB;AAII,iCAAY;AAJhB,kBADJ;AAQI;AACI,2BAAOa,OAAOE,SADlB;AAEI,kCAAc,sBAACd,MAAD;AAAA,+BAAY,OAAKgB,QAAL,CAAc,EAAChB,cAAD,EAAd,CAAZ;AAAA,qBAFlB;AAGI,2BAAO,KAAKF,KAAL,CAAWE,MAHtB;AAII,iCAAY;AAJhB,kBARJ;AAeI;AAAA;AAAA,sBAAY,OAAO,EAACiB,QAAQ,EAAT,EAAnB,EAAiC,0BAAjC,EAAqD,SAAS,KAAKhB,UAAnE;AAAA;AAAA;AAfJ,aADJ;AAqBH;;;4BAlDMiB,iB,GAAoB,iBAAoB;AAAA,QAAjBd,UAAiB,SAAjBA,UAAiB;;AAC3C,WAAO;AACHe,eAAO;AADJ,KAAP;AAGH,C;;;AAiDL,IAAMP,SAAS,wBAAWQ,MAAX,CAAkB;AAC7BP,eAAW;AACPQ,cAAM,CADC;AAEPC,yBAAiB,MAFV;AAGPC,oBAAY,QAHL;AAIPC,wBAAgB;AAJT,KADkB;AAO7BV,eAAW;AACPW,gBAAQ,EADD,EACKC,OAAO,KADZ,EACmBC,aAAa,MADhC,EACwCC,aAAa,CADrD;AAEPC,sBAAc,CAFP;AAGPC,qBAAa,CAHN;AAIPC,sBAAc,CAJP;AAKPC,sBAAc,EALP;AAMPL;AANO;AAPkB,CAAlB,CAAf;;kBAkBe,2BAAU9B,OAAV,C","sourcesContent":["import React, { Component } from 'react';\nimport { Text, KeyboardAvoidingView, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { connect } from 'react-redux';\nimport { saveCardToDeck } from '../utils/api';\nimport { addCardToDeck } from '../actions';\nimport { NavigationActions } from 'react-navigation'; \nimport TextButton from './TextButton'; \nimport { black } from '../utils/colors';\nconst uuidv4 = require('uuid/v4');\n\nclass AddCard extends Component {\n\n    static navigationOptions = ({ navigation }) => {\n        return {\n            title: 'Add Card'\n        }\n    }\n        \n    state = {\n        question: '',\n        answer: ''\n    }\n\n    submitCard = () => {\n        const { question, answer } = this.state;\n        const { dispatch, navigation } = this.props; \n        const { deckId } = navigation.state.params;\n        if (question.length > 0 && answer.length > 0) {\n            const id = uuidv4();\n            const card = { id, question, answer }\n            dispatch(addCardToDeck(deckId, card));\n            saveCardToDeck(deckId, card);\n            this.toDeck();\n        }\n    }\n\n    toDeck = () => {\n        this.props.navigation.goBack();\n\t}\n\n    render() {\n        return (\n            <KeyboardAvoidingView style={styles.container}>\n                <TextInput\n                    style={[styles.textField, { marginTop: 40 }]}\n                    onChangeText={(question) => this.setState({question})}      \n                    value={this.state.question}\n                    placeholder='Enter Question'\n                />\n\n                <TextInput\n                    style={styles.textField}\n                    onChangeText={(answer) => this.setState({answer})}      \n                    value={this.state.answer}\n                    placeholder='Enter Anwer'\n                />\n\n                <TextButton style={{margin: 20}} buttonColor={black} onPress={this.submitCard}>\n                    Submit\n                </TextButton>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    textField: {\n        height: 40, width: '80%', borderColor: 'gray', borderWidth: 1,\n        borderRadius: 5,\n        paddingLeft: 8,\n        paddingRight: 8,\n        marginBottom: 25,\n        borderColor: black\n    }\n});\n\n\nexport default connect()(AddCard)"]}]