["0bca58c82026dc388b1c997e9f32c6f9bedad380","0fe9da6025a45536b045575a4aca2e917dc1a1c5",["react","react-native","react-redux","react-navigation","./TextButton","../utils/colors"],[110,207,251,299,347,456],{"version":3,"sources":["/Users/alfianlosari/Desktop/RN/MobileFlashcards/components/DeckDetail.js"],"names":["DeckDetail","addCard","navigation","props","deckId","state","params","navigate","startQuiz","deck","styles","container","deckView","fontSize","title","color","questions","length","margin","marginBottom","borderWidth","navigationOptions","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","paddingBottom","mapStateToProps","decks"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;IAEMA,U;;;;;;;;;;;;;;8MASFC,O,GAAU,YAAM;AAAA,gBACJC,UADI,GACW,MAAKC,KADhB,CACJD,UADI;AAAA,gBAEJE,MAFI,GAEOF,WAAWG,KAAX,CAAiBC,MAFxB,CAEJF,MAFI;;AAGZF,uBAAWK,QAAX,CAAoB,SAApB,EAA+B,EAAEH,cAAF,EAA/B;AACH,S,QAEDI,S,GAAY,YAAM;AAAA,gBACNN,UADM,GACS,MAAKC,KADd,CACND,UADM;AAAA,gBAENE,MAFM,GAEKF,WAAWG,KAAX,CAAiBC,MAFtB,CAENF,MAFM;;AAGdF,uBAAWK,QAAX,CAAoB,MAApB,EAA2B,EAAEH,cAAF,EAA3B;AACH,S;;;;;iCAEQ;AAAA,gBACGK,IADH,GACY,KAAKN,KADjB,CACGM,IADH;;AAEL,mBACI;AAAA;AAAA,kBAAY,uBAAuBC,OAAOC,SAA1C;AACI;AAAA;AAAA,sBAAM,OAAOD,OAAOE,QAApB;AACI;AAAA;AAAA,0BAAM,OAAO,EAACC,UAAU,EAAX,EAAb;AAA8BJ,6BAAKK;AAAnC,qBADJ;AAEI;AAAA;AAAA,0BAAM,OAAO,EAACD,UAAU,EAAX,EAAeE,OAAO,SAAtB,EAAb;AAAgDN,6BAAKO,SAAL,CAAeC,MAA/D;AAAA;AAAA;AAFJ,iBADJ;AAMI;AAAA;AAAA,sBAAY,OAAO,EAACC,QAAQ,EAAT,EAAnB,EAAiC,0BAAjC,EAAqD,wBAArD,EAAuE,WAAW,EAACC,cAAc,EAAf,EAAmBC,aAAa,CAAhC,EAAlF,EAAsH,SAAS,KAAKnB,OAApI;AAAA;AAAA,iBANJ;AAUI;AAAA;AAAA,sBAAY,OAAO,EAACiB,QAAQ,EAAT,EAAnB,EAAiC,0BAAjC,EAAqD,wBAArD,EAAuE,SAAS,KAAKV,SAArF;AAAA;AAAA;AAVJ,aADJ;AAiBH;;;4BAtCMa,iB,GAAoB,iBAAoB;AAAA,QAAjBnB,UAAiB,SAAjBA,UAAiB;AAAA,QACnCY,KADmC,GACzBZ,WAAWG,KAAX,CAAiBC,MADQ,CACnCQ,KADmC;;AAE3C,WAAO;AACHA;AADG,KAAP;AAGH,C;;;AAoCL,IAAMJ,SAAS,wBAAWY,MAAX,CAAkB;AAC7BX,eAAW;AACPY,cAAM,CADC;AAEPC,yBAAiB,MAFV;AAGPC,oBAAY,QAHL;AAIPC,wBAAgB;AAJT,KADkB;AAO7Bd,cAAU;AACNa,oBAAY,QADN;AAENE,oBAAY,GAFN;AAGNC,uBAAe;AAHT;AAPmB,CAAlB,CAAf;;AAcA,SAASC,eAAT,CAAyBC,KAAzB,SAAgD;AAAA,QAAd5B,UAAc,SAAdA,UAAc;AAAA,QACpCE,MADoC,GACzBF,WAAWG,KAAX,CAAiBC,MADQ,CACpCF,MADoC;;AAE5C,WAAO;AACHK,cAAMqB,MAAM1B,MAAN;AADH,KAAP;AAGH;;kBAEc,yBAAQyB,eAAR,EAAyB7B,UAAzB,C","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollView, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { connect } from 'react-redux';\nimport { NavigationActions } from 'react-navigation'; \nimport TextButton from './TextButton'; \nimport { black, white } from '../utils/colors';\n\nclass DeckDetail extends Component {\n\n    static navigationOptions = ({ navigation }) => {\n        const { title } = navigation.state.params;\n        return {\n            title\n        }\n    }\n\n    addCard = () => {\n        const { navigation } = this.props;\n        const { deckId } = navigation.state.params;            \n        navigation.navigate('AddCard', { deckId }) \n    }\n\n    startQuiz = () => {\n        const { navigation } = this.props;\n        const { deckId } = navigation.state.params;  \n        navigation.navigate('Quiz',{ deckId })\n    }\n\n    render() {\n        const { deck } = this.props;\n        return (\n            <ScrollView contentContainerStyle={styles.container}>\n                <View style={styles.deckView}>\n                    <Text style={{fontSize: 36}}>{deck.title}</Text>\n                    <Text style={{fontSize: 27, color: '#c0c0c0'}}>{deck.questions.length} cards</Text>\n                </View>\n\n                <TextButton style={{margin: 20}} buttonColor={white} textColor={black} viewStyle={{marginBottom: 10, borderWidth: 1}} onPress={this.addCard}>\n                    Add Card\n                </TextButton>\n\n                <TextButton style={{margin: 20}} buttonColor={black} textColor={white} onPress={this.startQuiz}>\n                    Start Quiz\n                </TextButton>\n         \n            </ScrollView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    deckView: {\n        alignItems: 'center',\n        paddingTop: 100,\n        paddingBottom: 100\n    }\n});\n\nfunction mapStateToProps(decks, { navigation }) {\n    const { deckId } = navigation.state.params;    \n    return {\n        deck: decks[deckId]\n    }\n}\n\nexport default connect(mapStateToProps)(DeckDetail)\n"]}]